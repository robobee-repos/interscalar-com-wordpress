/*
 * Mandatory:
 *
 * vars.nginx.hosts[]
 * vars.nginx.workerProcesses
 * vars.nginx.workerConnections
 * vars.nginx.clientMaxBodySize
 * vars.wordpress.php.maxExecutionTime
 */

bb-nginx-config-yaml(parent, vars) ::= <<
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-<vars.nginx.revision>
  namespace: interscalar-com
  labels:
    app: nginx
    tier: frontend
    group: interscalar-com
data:
  nginx.conf: |
    worker_processes  <vars.nginx.workerProcesses>;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  <vars.nginx.workerConnections>;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /var/log/nginx/access.log  main;
        sendfile        off;
        tcp_nopush     off;
        tcp_nodelay on;
        keepalive_timeout  65;
        gzip  off;
        index index.php index.html index.htm;
        client_max_body_size <vars.nginx.clientMaxBodySize>;
<rest(vars.nginx.hosts):redirectHost(parent, vars);separator="\n">
        server {
            listen 8080 default_server;
            listen [::]:8080 default_server;
            root /var/www/html;
            server_name <vars.nginx.hosts;separator=" ">;
            index index.php;
            #
            location = /favicon.ico {
              log_not_found off;
              access_log off;
            }
            #
            location = /robots.txt {
              allow all;
              log_not_found off;
              access_log off;
            }
            # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
            # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
            location ~ /\. {
              deny all;
            }
            # Deny access to any files with a .php extension in the uploads directory
            # Works in sub-directory installs and also in multisite network
            # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
            location ~* /(?:uploads|files)/.*\.php$ {
              deny all;
            }
            #
            location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ /index.php?$args;
            }
            # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
            #
            #location ~ \.php$ {
            #fastcgi_pass   localhost:9000;
            #fastcgi_index  index.php;
            #fastcgi_param PATH_TRANSLATED $document_root$fastcgi_script_name;
            #include        fastcgi_params;
            #fastcgi_read_timeout <vars.wordpress.php.maxExecutionTime>;
            #fastcgi_send_timeout <vars.wordpress.php.maxExecutionTime>;
            #}
            #
            location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                    expires max;
                    log_not_found off;
            }
            # php-fpm ping and status.
            #location ~ ^/(phpstatus|ping)$ {
            #fastcgi_pass   localhost:9000;
            #fastcgi_param PATH_TRANSLATED $document_root$fastcgi_script_name;
            #include        fastcgi_params;
            #}
        }
    }

>>

redirectHost(host, parent, vars) ::= <<
        server {
            root /var/www/html;
            server_name <host>;
            return 301 https://www.<first(vars.nginx.hosts)>$request_uri;
        }
>>
