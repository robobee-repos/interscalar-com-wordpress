/*
 * Adds affinity group section.
 *
 * Mandatory:
 *
 * affinity.key
 * affinity.name
 * 
 * Optional:
 *
 * affinity.required
 */
affinitiesGroup(parent, vars, affinity) ::= <<
<if(vars.db.affinity)>
      <affinitiesGroup(parent, vars, vars.db.affinity)>
<endif>
>>

/*
 * Adds affinity section.
 *
 * Mandatory:
 *
 * affinity.key
 * affinity.name
 * 
 * Optional:
 *
 * affinity.required
 */
affinitiesSection(parent, vars, affinity) ::= <<
affinity:
  nodeAffinity:
<if(affinity.required)>
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: <affinity.key>
          operator: In
          values:
          - required
<else>
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 1
      preference:
        matchExpressions:
        - key: <affinity.key>
          operator: In
          values:
          - preferred
<endif>
  podAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: <affinity.key>
            operator: In
            values:
            - <affinity.name>
        topologyKey: kubernetes.io/hostname
>>
