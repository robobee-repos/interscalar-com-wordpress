/*
 * Mandatory:
 * 
 * vars.nginx.hosts
 * vars.nginx.clientMaxBodySize_m
 *
 */
xx-wordpress-ingress-yaml(parent, vars) ::= <<
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: wordpress
  namespace: interscalar-com
  labels:
    app: wordpress
    tier: frontend
    deployment: wordpress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
    ingress.kubernetes.io/proxy-body-size: <vars.nginx.clientMaxBodySize_m>m
    ingress.kubernetes.io/affinity: "cookie"
spec:
  tls:
  - hosts:
    - interscalar.com.muellerpublic.de
    <first(vars.nginx.hosts):{h|- <h>};separator="\n">
    secretName: tls-secret
  rules:
  - host: interscalar.com.muellerpublic.de
    http:
      paths:
      - path: /
        backend:
          serviceName: wordpress
          servicePort: 9090
<first(vars.nginx.hosts):hostRule();separator="\n">

---

<rest(vars.nginx.hosts):redirectIngress(parent, vars);separator="\n---\n">

>>


redirectIngress(host, parent, vars) ::= <<

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: wordpress-<host>
  namespace: interscalar-com
  labels:
    app: wordpress
    tier: frontend
    deployment: wordpress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/configuration-snippet: |
      return 301 https://<first(vars.nginx.hosts)>$request_uri;
spec:
  rules:
  - host: <host>
    http:
      paths:
      - path: /
        backend:
          serviceName: wordpress
          servicePort: 9090
>>
