/*
* Mandatory:
* 
* vars.wordpress.image.name
* vars.wordpress.image.version
* vars.wordpress.limits.cpu
* vars.wordpress.limits.memory
* vars.wordpress.requests.cpu
* vars.wordpress.requests.memory
* vars.wordpress.php.memoryLimit_MB
* vars.wordpress.php.maxExecutionTime_s
* vars.piwik.php.maxChildren
* vars.piwik.php.startServers
* vars.piwik.php.minSpareServers
* vars.piwik.php.maxSpareServers
* vars.wordpress.php.opcacheMemoryConsumption_MB
* vars.nginx.image.name
* vars.nginx.image.version
* vars.nginx.limits.cpu
* vars.nginx.limits.memory
* vars.nginx.requests.cpu
* vars.nginx.requests.memory
*/

cc-wordpress-deploy-yaml(parent, vars) ::= <<

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wordpress-wordpress-data
  namespace: interscalar-com
  labels:
    app: wordpress
    tier: frontend
    deployment: wordpress
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi

---

apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: interscalar-com
  labels:
    app: wordpress
    tier: frontend
    deployment: wordpress
spec:
  ports:
  - name: "http"
    port: 9090
    targetPort: 9090
  selector:
    app: wordpress

---

apiVersion: v1
kind: Service
metadata:
  name: wordpress-php
  namespace: interscalar-com
  labels:
    app: wordpress
    tier: frontend
    deployment: wordpress
spec:
  ports:
  - name: "php"
    port: 9000
    targetPort: 9000
  selector:
    app: wordpress

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: wordpress
  namespace: interscalar-com
  labels:
    app: wordpress
    tier: frontend
    deployment: wordpress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
      deployment: wordpress
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
        deployment: wordpress
    spec:
      containers:
      - image: <vars.wordpress.image.name>:<vars.wordpress.image.version>
        name: wordpress
        env:
        - name: WORDPRESS_DB_NAME
          valueFrom:
            secretKeyRef:
              name: db
              key: wordpress_db
        - name: WORDPRESS_DB_USER
          valueFrom:
            secretKeyRef:
              name: db
              key: wordpress_user
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: wordpress_password
        - name: WORDPRESS_DB_HOST
          value: "db:3306"
        - name: PHP_MEMORY_LIMIT_MB
          value: "<vars.wordpress.php.memoryLimit_MB>"
        - name: PHP_MAX_EXECUTION_TIME
          value: "<vars.wordpress.php.maxExecutionTime_s>"
        - name: PHP_FPM_MAX_CHILDREN
          value: "<vars.piwik.php.maxChildren>"
        - name: PHP_FPM_START_SERVERS
          value: "<vars.piwik.php.startServers>"
        - name: PHP_FPM_MIN_SPARE_SERVERS
          value: "<vars.piwik.php.minSpareServers>"
        - name: PHP_FPM_MAX_SPARE_SERVERS
          value: "<vars.piwik.php.maxSpareServers>"
        - name: PHP_OPCACHE_MEMORY_CONSUMPTION_MB
          value: "<vars.wordpress.php.opcacheMemoryConsumption_MB>"
        ports:
        - containerPort: 9000
          name: "php"
        resources:
          limits:
            cpu: <vars.wordpress.limits.cpu>
            memory: <vars.wordpress.limits.memory>
          requests:
            cpu: <vars.wordpress.requests.cpu>
            memory: <vars.wordpress.requests.memory>
        volumeMounts:
        - mountPath: /var/www/html
          name: wordpress-wordpress-data
      - image: <vars.nginx.image.name>:<vars.nginx.image.version>
        name: nginx
        ports:
        - containerPort: 9090
          name: "http"
        resources:
          limits:
            cpu: <vars.nginx.limits.cpu>
            memory: <vars.nginx.limits.memory>
          requests:
            cpu: <vars.nginx.requests.cpu>
            memory: <vars.nginx.requests.memory>
        volumeMounts:
        - mountPath: /var/www/html
          name: wordpress-wordpress-data
        - mountPath: /nginx-in
          name: nginx-nginx-config
      - image: gcr.io/google_containers/liveness
        name: liveness
        args:
        - /server
        livenessProbe:
          httpGet:
            path: /ping
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /index.php
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
      restartPolicy: Always
      volumes:
      - name: wordpress-wordpress-data
        persistentVolumeClaim:
          claimName: wordpress-wordpress-data
      - name: nginx-nginx-config
        configMap:
          name: nginx

---

>>
